!function(o,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(o="undefined"!=typeof globalThis?globalThis:o||self).NOISE_SUPPRESSION=i()}(this,(function(){"use strict";return class{constructor(o){this._workletUrl=o}isOn(){return void 0!==this._noiseSuppressorNode}start(o){return console.log("[NSUtil] denoise start"),this.isOn()?(console.error("[NSUtil] already on! please call stop() first."),o):(this._audioContext=new AudioContext,this._audioSource=this._audioContext.createMediaStreamSource(o),this._audioDestination=this._audioContext.createMediaStreamDestination(),this._audioDestination.channelCount=1,this._audioContext.audioWorklet.addModule(this._workletUrl).then((()=>{console.log("[NSUtil] worklet loaded"),this._audioContext&&this._audioSource&&this._audioDestination&&(this._noiseSuppressorNode=new AudioWorkletNode(this._audioContext,"NoiseSuppressorWorklet"),this._audioSource.connect(this._noiseSuppressorNode).connect(this._audioDestination))})).catch((o=>{console.error("[NSUtil] Error while adding audio worklet module: ",o)})),this._audioDestination.stream)}stop(){var o,i,t,e,s,n;console.log("[NSUtil] denoise stop"),null===(i=null===(o=this._noiseSuppressorNode)||void 0===o?void 0:o.port)||void 0===i||i.close(),null===(t=this._audioDestination)||void 0===t||t.disconnect(),null===(e=this._noiseSuppressorNode)||void 0===e||e.disconnect(),null===(s=this._audioSource)||void 0===s||s.disconnect(),null===(n=this._audioContext)||void 0===n||n.close(),this._audioDestination=void 0,this._noiseSuppressorNode=void 0,this._audioSource=void 0,this._audioContext=void 0}}}));
